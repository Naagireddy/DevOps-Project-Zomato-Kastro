name: Zomoto clone app build
on:
  push:
    branches:
      - 'master'

jobs:
  build: 
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        #[18.x, 20.x, 22.x]
        
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm install
    - name: Docker Login
      uses: docker/login-action@v2
      with: 
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{  secrets.DOCKER_PASSWORD}}
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}      

    - name: Set image tag with timestamp
      id: set_tag
      run: |
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/zomoto:${{github.run_number}}"
          #IMAGE_TAG="snagireddy9/zomoto:$(date +'%Y-%m-%d_%H-%M-%S')"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV  
          echo "${{github.run_number}}"

    - name: Build the Docker Image
      run: |
           #IMAGE_TAG="zomoto:$(date +'%Y-%m-%d_%H-%M-%S')"
           echo "Building image with tag $IMAGE_TAG"
           docker build . --file Dockerfile --tag $IMAGE_TAG
           #docker build . --file Dockerfile

    - name: Push Docker image to DockerHub
      run: |
           #IMAGE_TAG="zomoto" #:$(date +'%Y-%m-%d_%H-%M-%S')"
           docker push $IMAGE_TAG  

    - name: Create ECS Cluster
      run: |
          aws ecs create-cluster --cluster-name my-cluster   


   # Create ECS Task Definition
    - name: Create ECS Task Definition
      run: |
          # Create a task definition JSON file dynamically or from a pre-defined template
          cat > task-definition.json <<EOL
          {
            "family": "my-task-definition",
            "networkMode": "awsvpc",
            "containerDefinitions": [
              {
                "name": "my-container",
                "image": "${{ secrets.DOCKER_USERNAME }}/zomoto:${{github.run_number}}",
                "memory": 512,
                "cpu": 256,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "hostPort": 8080
                  }
                ]
              }
            ]
          }
          EOL

          # Register the ECS Task Definition
          aws ecs register-task-definition --cli-input-json file://task-definition.json   

    - name: Run ECS Service
      run: |
          aws ecs create-service \
            --cluster my-cluster \
            --service-name my-service \
            --task-definition my-task-definition \
            --desired-count 1 \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-08536ee300c198cda],securityGroups=[sg-09530adb6fafe01c1],assignPublicIp=ENABLED}"
    
